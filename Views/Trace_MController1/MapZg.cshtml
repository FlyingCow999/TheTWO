
@{
    ViewData["Title"] = "MapZg";
}
<script src="~/js/axios.min.js"></script>
<script src="~/js/vue.min.js"></script>
<script src="~/lib/jquery/dist/jquery.js"></script>
<link href="~/lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />
<script src="~/LayUI前端/layui-v2.5.6/layui/layui.js"></script>
<link href="~/LayUI前端/layui-v2.5.6/layui/css/layui.css" rel="stylesheet" />
<script src="~/ElementUI/element-ui.js"></script>
<script src="~/ElementUI/Index.js"></script>
<link href="~/ElementUI/element-ui.css" rel="stylesheet" />
<h2>运输执行-在途跟踪</h2>
<hr />
<br />
<h2>运单信息</h2>
<table class="layui-hide" id="test"></table>
<br />
<div id="app">
    <div v-for="e in emps">
        <p><span style="font-size:16px">在途跟踪 ：&nbsp;&nbsp; 执行单号：{{e.if_BCarTime}}&nbsp;&nbsp;车俩牌号：{{e.if_BCarTime}}&nbsp;&nbsp;车俩档案编号：{{e.if_BCarTime}}</span></p>
    </div>
    <hr />
    <div style="border:1px solid">
        <div v-for="e in emps" style="margin-top:20px">
            <p>【出发】 {{e.if_BCarTime}}:{{e.if_BeginPlace}}</p>
        </div>
        <br />
        <p><span>途经站点&nbsp;&nbsp;</span></p>
        <br>
        <div class="block">
            <el-timeline>
                <div v-for="m in meg">
                    <el-timeline-item :timestamp="m.r_Time" placement="top">
                        <el-card style="width:200px">
                            <h4>{{m.r_Pass}}</h4>
                        </el-card>
                    </el-timeline-item>
                </div>
            </el-timeline>
        </div>
        <br />
        <div v-for="e in emps" style="margin-bottom:20px">
            <p>【预计到达】 {{e.if_PlanArrivalTime}}:{{e.if_EndPlace}}</p>
        </div>

    </div>
    <br />
        <div style="margin:0px 0px auto">
        <input type="button" style="float:right" class="layui-btn layui-btn-primary layui-btn-lg" v-on:click="goh" value="返回" />
    </div>
</div>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=gb2312" />
    <meta name="keywords" content="百度地图,百度地图API，百度地图自定义工具，百度地图所见即所得工具" />
    <meta name="description" content="百度地图API自定义地图，帮助用户在可视化操作下生成百度地图" />
    <title>百度地图API自定义地图</title>
    <!--引用百度地图API-->
    <style type="text/css">
        html, body {
            margin: 0;
            padding: 0;
        }

        .iw_poi_title {
            color: #CC5522;
            font-size: 14px;
            font-weight: bold;
            overflow: hidden;
            padding-right: 13px;
            white-space: nowrap
        }

        .iw_poi_content {
            font: 12px arial,sans-serif;
            overflow: visible;
            padding-top: 4px;
            white-space: -moz-pre-wrap;
            word-wrap: break-word
        }
    </style>
    <script type="text/javascript" src="http://api.map.baidu.com/api?key=&v=1.1&services=true"></script>
</head>

<body>
    <!--百度地图容器-->
    <div style="width:697px;height:550px;border:#ccc solid 1px;" id="dituContent">

    </div>

</body>
</html>


<script>
    //LayUI表格
    layui.use('table', function () {
        var table = layui.table;
        table.render({
            elem: '#test'
            , url: 'http://localhost:57030/api/Trace_M/XiangQ?Id=' + (@ViewBag.Id)
            , cellMinWidth: 80 //全局定义常规单元格的最小宽度，layui 2.2.1 新增
            , cols: [[
                { field: 'if_Number', title: '订单号', sort: true }
                , { field: 'e_AddPerson', title: '联系人' } //width 支持：数字、百分比和不填写。你还可以通过 minWidth 参数局部定义当前单元格的最小宽度，layui 2.2.1 新增
                , { field: 'if_BeginPlace', title: '始发地', sort: true }
                , { field: 'if_EndPlace', title: '目的地' }
                , { field: 'o_Row', title: '车牌' }
                , { field: 'co_State', title: '运作状态', align: 'center' } //单元格内容水平居中
                , { field: 'if_PlanBCarTime', title: '计划发车时间', sort: true, align: 'right' } //单元格内容水平居中
                , { field: 'if_BCarTime', title: '实际发车时间', sort: true, align: 'right' }
                , { field: 'if_PlanArrivalTime', title: '预计到达时间', sort: true, align: 'right' }
                , { field: 'co_Company', title: '收货方', align: 'center' } //单元格内容水平居中
                , { field: 'co_Person', title: '收货人', sort: true, align: 'right' } //单元格内容水平居中
                , { field: 'co_Phone', title: '联系电话', sort: true, align: 'right' }
                , { field: 'co_Address', title: '收货地址', sort: true, align: 'right' }
                , { field: 'e_Company', title: '委托方', align: 'center' } //单元格内容水平居中
                , { field: 'e_Person', title: '委托人', sort: true, align: 'right' } //单元格内容水平居中
                , { field: 'e_Phone', title: '联系电话', sort: true, align: 'right' }
                , { field: 'if_Goods', title: '货名', sort: true, align: 'right' }
                , { field: 'if_Remark', title: '备注', align: 'center' } //单元格内容水平居中
            ]]
        });
    });
    //显示
    var vue1 = new Vue({
            el: '#app',
            data(){
                return {
                    emps: "",
                    meg:"",
            }
            },
            mounted: function() {
                this.show();
                this.Rshow();
            },
        methods: {
            //显示主体
            show: function () {
                axios({
                    method: "get",
                    url: "http://localhost:57030/api/Inquiry_M/GetXiangQing?Id=" +@ViewBag.Id,
                }).then((response => (this.emps = response.data)))
            },
            //显示途径站
            Rshow: function () {
                axios({
                    method: "get",
                    url: "http://localhost:57030/api/Trace_M/RouteAdd?Id=" +@ViewBag.Id,
                }).then((response => (this.meg = response.data)))
            },
            //返回
            goh: function () {
                location.href = "/Trace_MController1/Index";
            }
            }
    })

    //创建和初始化地图函数：
    function initMap() {
        createMap();//创建地图
        setMapEvent();//设置地图事件
        addMapControl();//向地图添加控件
    }

    //创建地图函数：
    function createMap() {
        var map = new BMap.Map("dituContent");//在百度地图容器中创建一个地图
        var point = new BMap.Point(138.777394, 40.478821);//定义一个中心点坐标
        map.centerAndZoom(point, 4);//设定地图的中心点和坐标并将地图显示在地图容器中
        window.map = map;//将map变量存储在全局
    }

    //地图事件设置函数：
    function setMapEvent() {
        map.enableDragging();//启用地图拖拽事件，默认启用(可不写)
        map.enableScrollWheelZoom();//启用地图滚轮放大缩小
        map.enableDoubleClickZoom();//启用鼠标双击放大，默认启用(可不写)
        map.enableKeyboard();//启用键盘上下左右键移动地图
    }

    //地图控件添加函数：
    function addMapControl() {
        //向地图中添加缩放控件
        var ctrl_nav = new BMap.NavigationControl({ anchor: BMAP_ANCHOR_TOP_LEFT, type: BMAP_NAVIGATION_CONTROL_LARGE });
        map.addControl(ctrl_nav);
        //向地图中添加缩略图控件
        var ctrl_ove = new BMap.OverviewMapControl({ anchor: BMAP_ANCHOR_BOTTOM_RIGHT, isOpen: 1 });
        map.addControl(ctrl_ove);
        //向地图中添加比例尺控件
        var ctrl_sca = new BMap.ScaleControl({ anchor: BMAP_ANCHOR_BOTTOM_LEFT });
        map.addControl(ctrl_sca);
    }


    initMap();//创建和初始化地图
</script>

